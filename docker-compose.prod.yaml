version: '3.8'

services:
  db:
    image: postgres:17.0
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - db-network

  web:
    build:
      context: .
      dockerfile: services/web/Dockerfile.prod
    environment:
      - DEBUG=false
    ports:
      - "8000:8000"
    command: >
      sh -c "wait-for-it db:5432 -- &&
      poetry run python manage.py makesuperuser &&
      poetry run python manage.py makemigrations &&
      poetry run python manage.py migrate &&
      poetry run python manage.py runserver 0.0.0.0:8000"
    restart: always
    depends_on:
      - db
    networks:
      - db-network

  proxy:
    image: caddy
    volumes:
      - ./services/proxy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    depends_on:
      - web
    restart: always

volumes:
  caddy_data:
  caddy_config:
  pgdata:

networks:
  db-network:
    driver: bridge
